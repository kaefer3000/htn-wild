@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

@prefix http: <http://www.w3.org/2011/http#> .
@prefix http_m: <http://www.w3.org/2011/http-methods#> .

@prefix sp: <http://spinrdf.org/sp#>.
@prefix sparql-result: <http://www.w3.org/2005/sparql-results#> .

@prefix swap_list: <http://www.w3.org/2000/10/swap/list#> .

@prefix this: <http://this.nxparser.github.io/reference/to/URI/of/current/rdf/graph/for/representing/permanently/relative/URIs/in/N-Triples/#> .

@prefix ldbbc: <http://tok450s.lan/ldbbc/> .
@prefix ldbbc_lists: <http://tok450s.lan/ldbbc/lists/> .

@prefix htn: <http://purl.org/uberq/htn/vocab#> .
@prefix method: <http://purl.org/uberq/htn/ns/methods#> .
@prefix variable: <http://purl.org/uberq/htn/ns/variables#> .
@prefix operator: <http://purl.org/uberq/htn/ns/operators#> .
@prefix goal: <http://purl.org/uberq/htn/ns/goal#> .
@prefix literal: <http://purl.org/uberq/htn/ns/literals#> .

@prefix wild: <http://purl.org/wild/vocab#> .
@prefix list: <http://purl.org/list/vocab#> .

@prefix : <#> .


# HTN-X1-1
# > Determine if the first activity is at decomposition state done
{
    ?pi
        a htn:PlanningProblemInstance ;
        htn:atDecompositionState htn:decomposing .

    ?childList
        a rdf:List ;
        htn:forPlanningProblemInstance ?pi ;
        htn:hasParent ?parentActivity ;
        rdf:first ?firstActivity .

    ?parentActivity
        a ?typeOfActivity ;
        htn:forPlanningProblemInstance ?pi ;
        htn:forTask ?task ;
        htn:hasLiteral ?literal ;
        wild:hasChildActivities ?possiblyIncompleteChildList ;
        htn:atDecompositionState ?state .

    ?firstActivity
        htn:forPlanningProblemInstance ?pi ;
        htn:atDecompositionState htn:done .
} => {
    ?firstActivity
        htn:atVirtualDecompositionState htn:doneFromListItemOne .
} .


# HTN-X1-2
# > Determine if the middle activities are at decomposition state done
{
    ?pi
        a htn:PlanningProblemInstance ;
        htn:atDecompositionState htn:decomposing .

    ?childList
        a rdf:List ;
        htn:forPlanningProblemInstance ?pi ;
        htn:hasParent ?parentActivity ;
        list:equalsOrTransitiveRest ?bn .

    ?parentActivity
        a ?typeOfActivity ;
        htn:forPlanningProblemInstance ?pi ;
        htn:forTask ?task ;
        htn:hasLiteral ?literal ;
        wild:hasChildActivities ?possiblyIncompleteChildList ;
        htn:atDecompositionState ?state .

    ?bn
        rdf:first ?doneActivity ;
        rdf:rest ?bn2 .

    ?doneActivity
        htn:forPlanningProblemInstance ?pi ;
        htn:atVirtualDecompositionState htn:doneFromListItemOne .

    ?bn2
        rdf:first ?nextActivity .

    ?nextActivity
        htn:forPlanningProblemInstance ?pi ;
        htn:atDecompositionState htn:done .
} => {
    ?nextActivity
        htn:atVirtualDecompositionState htn:doneFromListItemOne .
} .


# HTN-X1-3
# > All activities are at decomposition state done, so (re-)assign this list
{
    ?pi
        a htn:PlanningProblemInstance ;
        htn:atDecompositionState htn:decomposing .

    ?childList
        a rdf:List ;
        htn:forPlanningProblemInstance ?pi ;
        htn:hasParent ?parentActivity ;
        list:equalsOrTransitiveRest ?bn .

    ?parentActivity
        a ?typeOfActivity ;
        htn:forPlanningProblemInstance ?pi ;
        htn:forTask ?task ;
        htn:hasLiteral ?literal ;
        wild:hasChildActivities ?possiblyIncompleteChildList ;
        htn:atDecompositionState ?state .

    ?bn
        rdf:first ?doneActivity ;
        rdf:rest rdf:nil .

    ?doneActivity
        htn:forPlanningProblemInstance ?pi ;
        htn:atVirtualDecompositionState htn:doneFromListItemOne .
} => {
    _:h
        http:mthd http_m:PUT ;
        http:requestURI ?parentActivity ;
        http:body {
            ?parentActivity
                a ?typeOfActivity ;
                htn:forPlanningProblemInstance ?pi ;
                htn:forTask ?task ;
                htn:hasLiteral ?literal ;
                wild:hasChildActivities ?childList ;
                htn:atDecompositionState htn:done .
        } .
} .
# HTN-X1-3
# > Also mark the list as virtually done to help determine if the whole problem is done
{
    ?pi
        a htn:PlanningProblemInstance ;
        htn:atDecompositionState htn:decomposing .

    ?childList
        a rdf:List ;
        htn:forPlanningProblemInstance ?pi ;
        htn:hasParent ?parentActivity ;
        list:equalsOrTransitiveRest ?bn .

    ?parentActivity
        a ?typeOfActivity ;
        htn:forPlanningProblemInstance ?pi ;
        htn:forTask ?task ;
        htn:hasLiteral ?literal ;
        wild:hasChildActivities ?possiblyIncompleteChildList ;
        htn:atDecompositionState ?state .

    ?bn
        rdf:first ?doneActivity ;
        rdf:rest rdf:nil .

    ?doneActivity
        htn:forPlanningProblemInstance ?pi ;
        htn:atVirtualDecompositionState htn:doneFromListItemOne .
} => {
    ?childList
        htn:atVirtualDecompositionState htn:doneFromListItemOne .
} .
